<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Try">
    <!--серые-->
    <SolidColorBrush x:Key="BrushText" Color="#393939"/>
    <SolidColorBrush x:Key="Brush_11" Color="#80393939"/>
    <SolidColorBrush x:Key="Brush_1" Color="#888888"/>
    <SolidColorBrush x:Key="BackgroundBrush" Color="#EEEEEE"/>
    <SolidColorBrush x:Key="MediumGrayBrush" Color="#C7C7C7"/>
    <SolidColorBrush x:Key="Brush_9" Color="#C4C4C4"/>
    <SolidColorBrush x:Key="Brush_10" Color="#646464"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="#F8F8F8"/>

    <!--голубые-->
    <SolidColorBrush x:Key="StandartBrush" Color="#226BD9"/>
    <SolidColorBrush x:Key="Brush_4" Color="#2D78E9"/>
    <SolidColorBrush x:Key="Brush_7" Color="#4E89E1"/>
    <SolidColorBrush x:Key="Brush_12" Color="#BCD7FF"/>
    <SolidColorBrush x:Key="MouseOverBrush" Color="#3B82ED"/>

    <!--прочие-->
    <SolidColorBrush x:Key="TextCaptionElementBrush" Color="White"/>
    <SolidColorBrush x:Key="Brush_8" Color="#20999999"/>
    <SolidColorBrush x:Key="Brush_13" Color="Transparent"/>

    <!--Стиль обычных кнопок-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{StaticResource StandartBrush}" />
        <Setter Property="Background" Value="{StaticResource StandartBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="64" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Foreground" Value="{StaticResource TextCaptionElementBrush}" />
        <Setter Property="Template" Value="{StaticResource StandartButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MouseOverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource StandartBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource MediumGrayBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Стиль больших серых кнопок-->
    <Style x:Key="BigButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Foreground" Value="{StaticResource StandartBrush}" />
        <Setter Property="Template" Value="{StaticResource StandartButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="32"/>
                <!--<Setter Property="Height" Value="Auto" />-->
                <Setter Property="Background" Value="{StaticResource TextCaptionElementBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource StandartBrush}"/>
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Horizontal">
                <!--<Setter Property="Width" Value="32"/>-->
                <Setter Property="Height" Value="32" />
                <Setter Property="Background" Value="{StaticResource TextCaptionElementBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource StandartBrush}"/>
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>

        </Style.Triggers>
    </Style>




    <!--<SolidColorBrush x:Key="StandardBrush" Color="AliceBlue"/>
    <SolidColorBrush x:Key="StandardBorderBrush" Color="Blue"/>
    <SolidColorBrush x:Key="PressedBrush" Color="DarkGreen"/>
    <SolidColorBrush x:Key="GlyphBrush" Color="Green"/>


    <ControlTemplate x:Key="ControlTemplateButton" TargetType="Button">
        <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="3" CornerRadius="10" Background="{TemplateBinding Background}" TextBlock.Foreground="White" >
            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Red" />
        <Setter Property="BorderBrush" Value="Orange" />
        <Setter Property="Template" Value="{StaticResource ControlTemplateButton}"/>
    </Style>

    
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="Template"> 
            <Setter.Value> 
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Name="Border" Background="LightCoral" BorderBrush="Blue" BorderThickness="1" CornerRadius="3">
                        <ScrollViewer Focusable="False">
                            <ItemsPresenter Margin="2"></ItemsPresenter> 
                        </ScrollViewer> 
                    </Border> 
                </ControlTemplate> 
            </Setter.Value> 
        </Setter> 
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Template"> 
            <Setter.Value> 
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Border" Background="Yellow" BorderBrush="YellowGreen" BorderThickness="1" CornerRadius="3" >
                        <ContentPresenter />
                    </Border>
                <ControlTemplate.Triggers>
                    --><!--<EventTrigger RoutedEvent="ListBoxItem.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="FontSize" To="20" Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="ListBoxItem.MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="FontSize" BeginTime="0:0:0.5" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>--><!--
                <Trigger Property="IsMouseOver" Value="True"> 
                    <Setter TargetName="Border" Property="BorderBrush" Value="Red"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True"> 
                    <Setter TargetName="Border" Property="Background" Value="Green"/>
                    <Setter TargetName="Border" Property="TextBlock.Foreground" Value="AliceBlue"/>
                </Trigger>
            </ControlTemplate.Triggers>
            </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Background" Value="{StaticResource StandardBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource StandardBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Stroke="{StaticResource StandardBorderBrush}" Fill="{StaticResource StandardBrush}"></Ellipse>
                </ControlTemplate>
            </Setter.Value> 
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Margin="1">
                        <Ellipse Name="Border" StrokeThickness="1" Stroke="{StaticResource StandardBorderBrush}" Fill="{StaticResource StandardBrush}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <RepeatButton Grid.Row="0" Height="18" Style="{StaticResource ScrollBarLineButtonStyle}" Command="ScrollBar.LineUpCommand" >
                <Path Fill="{StaticResource GlyphBrush}" Data="M 0 4 L 8 4 L 4 0 Z"></Path>
            </RepeatButton>
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True" ViewportSize="0">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}"/>
                </Track.IncreaseRepeatButton>
            </Track>
            --><!--<RepeatButton Grid.Row="2" Height="18" Style="{StaticResource ScrollBarLineButtonStyle}" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>--><!--
            <RepeatButton Grid.Row="2"  Height="18" Style="{StaticResource ScrollBarLineButtonStyle}" Command="ScrollBar.LineDownCommand">
                <Path Fill="{StaticResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->


</ResourceDictionary>